/* 
 * Authorize.net REST API
 *
 * Authorize.net REST API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace AuthorizeNet.Rest.Model
{
    /// <summary>
    /// Invoice List Info
    /// </summary>
    [DataContract]
    public partial class InvoiceListInfo :  IEquatable<InvoiceListInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceListInfo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InvoiceListInfo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceListInfo" /> class.
        /// </summary>
        /// <param name="InvoiceNumber">InvoiceNumber (required).</param>
        /// <param name="CreatedDate">CreatedDate.</param>
        /// <param name="PayerName">PayerName (required).</param>
        /// <param name="PaymentDueDate">PaymentDueDate.</param>
        /// <param name="TotalAmount">TotalAmount (required).</param>
        /// <param name="Status">Status.</param>
        /// <param name="Self">Self.</param>
        /// <param name="SupportedActions">SupportedActions.</param>
        public InvoiceListInfo(string InvoiceNumber = null, string CreatedDate = null, string PayerName = null, string PaymentDueDate = null, decimal? TotalAmount = null, string Status = null, Link Self = null, List<Link> SupportedActions = null)
        {
            // to ensure "InvoiceNumber" is required (not null)
            if (InvoiceNumber == null)
            {
                throw new InvalidDataException("InvoiceNumber is a required property for InvoiceListInfo and cannot be null");
            }
            else
            {
                this.InvoiceNumber = InvoiceNumber;
            }
            // to ensure "PayerName" is required (not null)
            if (PayerName == null)
            {
                throw new InvalidDataException("PayerName is a required property for InvoiceListInfo and cannot be null");
            }
            else
            {
                this.PayerName = PayerName;
            }
            // to ensure "TotalAmount" is required (not null)
            if (TotalAmount == null)
            {
                throw new InvalidDataException("TotalAmount is a required property for InvoiceListInfo and cannot be null");
            }
            else
            {
                this.TotalAmount = TotalAmount;
            }
            this.CreatedDate = CreatedDate;
            this.PaymentDueDate = PaymentDueDate;
            this.Status = Status;
            this.Self = Self;
            this.SupportedActions = SupportedActions;
        }
        
        /// <summary>
        /// Gets or Sets InvoiceNumber
        /// </summary>
        [DataMember(Name="invoiceNumber", EmitDefaultValue=false)]
        public string InvoiceNumber { get; set; }
        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate", EmitDefaultValue=false)]
        public string CreatedDate { get; set; }
        /// <summary>
        /// Gets or Sets PayerName
        /// </summary>
        [DataMember(Name="payerName", EmitDefaultValue=false)]
        public string PayerName { get; set; }
        /// <summary>
        /// Gets or Sets PaymentDueDate
        /// </summary>
        [DataMember(Name="paymentDueDate", EmitDefaultValue=false)]
        public string PaymentDueDate { get; set; }
        /// <summary>
        /// Gets or Sets TotalAmount
        /// </summary>
        [DataMember(Name="totalAmount", EmitDefaultValue=false)]
        public decimal? TotalAmount { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }
        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        [DataMember(Name="self", EmitDefaultValue=false)]
        public Link Self { get; set; }
        /// <summary>
        /// Gets or Sets SupportedActions
        /// </summary>
        [DataMember(Name="supportedActions", EmitDefaultValue=false)]
        public List<Link> SupportedActions { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InvoiceListInfo {\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  PayerName: ").Append(PayerName).Append("\n");
            sb.Append("  PaymentDueDate: ").Append(PaymentDueDate).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("  SupportedActions: ").Append(SupportedActions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as InvoiceListInfo);
        }

        /// <summary>
        /// Returns true if InvoiceListInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of InvoiceListInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InvoiceListInfo other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.InvoiceNumber == other.InvoiceNumber ||
                    this.InvoiceNumber != null &&
                    this.InvoiceNumber.Equals(other.InvoiceNumber)
                ) && 
                (
                    this.CreatedDate == other.CreatedDate ||
                    this.CreatedDate != null &&
                    this.CreatedDate.Equals(other.CreatedDate)
                ) && 
                (
                    this.PayerName == other.PayerName ||
                    this.PayerName != null &&
                    this.PayerName.Equals(other.PayerName)
                ) && 
                (
                    this.PaymentDueDate == other.PaymentDueDate ||
                    this.PaymentDueDate != null &&
                    this.PaymentDueDate.Equals(other.PaymentDueDate)
                ) && 
                (
                    this.TotalAmount == other.TotalAmount ||
                    this.TotalAmount != null &&
                    this.TotalAmount.Equals(other.TotalAmount)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                ) && 
                (
                    this.Self == other.Self ||
                    this.Self != null &&
                    this.Self.Equals(other.Self)
                ) && 
                (
                    this.SupportedActions == other.SupportedActions ||
                    this.SupportedActions != null &&
                    this.SupportedActions.SequenceEqual(other.SupportedActions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.InvoiceNumber != null)
                    hash = hash * 59 + this.InvoiceNumber.GetHashCode();
                if (this.CreatedDate != null)
                    hash = hash * 59 + this.CreatedDate.GetHashCode();
                if (this.PayerName != null)
                    hash = hash * 59 + this.PayerName.GetHashCode();
                if (this.PaymentDueDate != null)
                    hash = hash * 59 + this.PaymentDueDate.GetHashCode();
                if (this.TotalAmount != null)
                    hash = hash * 59 + this.TotalAmount.GetHashCode();
                if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                if (this.Self != null)
                    hash = hash * 59 + this.Self.GetHashCode();
                if (this.SupportedActions != null)
                    hash = hash * 59 + this.SupportedActions.GetHashCode();
                return hash;
            }
        }
    }

}
