/* 
 * Authorize.net REST API
 *
 * Authorize.net REST API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using AuthorizeNet.Rest.Api;
using AuthorizeNet.Rest.Model;
using AuthorizeNet.Rest.Client;
using System.Reflection;

namespace AuthorizeNet.Rest.Test
{
    /// <summary>
    ///  Class for testing PaymentInstrument
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class PaymentInstrumentTests
    {
        // TODO uncomment below to declare an instance variable for PaymentInstrument
        //private PaymentInstrument instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of PaymentInstrument
            //instance = new PaymentInstrument();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PaymentInstrument
        /// </summary>
        [Test]
        public void PaymentInstrumentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" PaymentInstrument
            //Assert.IsInstanceOf<PaymentInstrument> (instance, "variable 'instance' is a PaymentInstrument");
        }

        /// <summary>
        /// Test the property 'CreditCard'
        /// </summary>
        [Test]
        public void CreditCardTest()
        {
            // TODO unit test for the property 'CreditCard'
        }
        /// <summary>
        /// Test the property 'BankAccount'
        /// </summary>
        [Test]
        public void BankAccountTest()
        {
            // TODO unit test for the property 'BankAccount'
        }
        /// <summary>
        /// Test the property 'FluidData'
        /// </summary>
        [Test]
        public void FluidDataTest()
        {
            // TODO unit test for the property 'FluidData'
        }
        /// <summary>
        /// Test the property 'Customer'
        /// </summary>
        [Test]
        public void CustomerTest()
        {
            // TODO unit test for the property 'Customer'
        }
        /// <summary>
        /// Test the property 'Validate'
        /// </summary>
        [Test]
        public void ValidateTest()
        {
            // TODO unit test for the property 'Validate'
        }

    }

}
